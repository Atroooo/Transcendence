"""
Django settings for backend project.

Generated by 'django-admin startprojects' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os

BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(".env")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

SECRET_KEY = os.environ.get("SECRET_KEY_DJANGO")

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "daphne",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "channels",
    "corsheaders",
    "authentification",
    "game",
    "friendlist",
    "tournament",
	'notification',
    "django_extensions",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]


WSGI_APPLICATION = "backend.wsgi.application"

#Channels
ASGI_APPLICATION = "backend.asgi.application"

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("redis", 6380)],
        },
    },
}

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ.get("NAME_POSTGRES"),
        "USER": os.environ.get("USER_POSTGRES"),
        "PASSWORD": os.environ.get("PASSWORD_POSTGRES"),
        "HOST": "database",
        "PORT": "5432",
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")

MEDIA_URL = "media/"
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

CORS_ALLOWED_ORIGINS = [
    "http://" + os.environ.get("HOST") + ":5500",
    "https://" + os.environ.get("HOST") + ":8000",
    "http://" + os.environ.get("HOST") + ":5501",
    "https://" + os.environ.get("HOST") + ":3000",
    "https://" + os.environ.get("HOST") + ":8443",
    "https://" + os.environ.get("HOST") + ":5432",
]

CSRF_TRUSTED_ORIGINS = [
    "https://" + os.environ.get("HOST") + ":8000",
    "http://" + os.environ.get("HOST") + ":5500",
    "http://" + os.environ.get("HOST") + ":5501",
    "https://" + os.environ.get("HOST") + ":3000",
    "https://" + os.environ.get("HOST") + ":8443",
    "https://" + os.environ.get("HOST") + ":5432",
]

ALLOWED_HOSTS = [
    os.environ.get("HOST"),
    "127.0.0.1",
]

CORS_ORIGIN_WHITELIST = [
    "https://" + os.environ.get("HOST") + ":8000",
    "http://" + os.environ.get("HOST") + ":5500",
    "https://" + os.environ.get("HOST") + ":3000",
    "https://" + os.environ.get("HOST") + ":8443",
    "https://" + os.environ.get("HOST") + ":5432",
]

CORS_ALLOW_CREDENTIALS = True

# Email
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_USE_TLS = True
EMAIL_HOST = os.environ.get("EMAIL_HOST")
EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")
EMAIL_PORT = 587
PASSWORD_RESET_TIMEOUT = 3600

# Celery
CELERY_BROKER_URL = os.environ.get("CELERY_BROKER", "redis://redis:6380/0 ")
CELERY_RESULT_BACKEND = os.environ.get("CELERY_BROKER", "redis://redis:6380/0 ")
CELERY_ACCEPT_CONTENT = ["json", "msgpack", "yaml"]
CELERY_IMPORTS = ("authentification.tasks",)
